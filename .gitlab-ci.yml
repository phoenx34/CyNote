# Stages of pipeline, should match with stage tag inside each job.
# Each stages executes in sequence, if previous job fails, then all the preceeding jobs are skipped.
stages:
  - mavenbuild
  - maventest
  - autodeploy
  - androidbuild
  - androidtest
  - androiddeploy

# tags: "shell" should match with the tag name provided to runner, for spring runner should execute in shell.
# Notice that in petclinic project, the spring project is in root of master, if yours is in folder then cd to that folder.
maven-build:
  stage: mavenbuild
  tags:
    - Spring_tag
  script:
    - cd Backend/petclinicdemos/Spring
    - mvn package -B

# artifacts are created when job executes successfully, and can be manually downloaded from GitLab GUI.
# artifacts are not mandatory, buts it good practice, in case auto deploy fails, you can manually download the jar.
maven-test:
  stage: maventest
  tags:
    - Spring_tag
  script:
    - cd Backend/petclinicdemos/Spring
    - mvn test
  artifacts:
    paths:
      - Spring/target/*.jar
# Below stage builds, deploys and executes the jar as service.
# Make sure there is /target directory in your server, else script will fail, or use any other folder you like.
# If you are changing the folder, reflect the change in systemd-web-demo service too.
autoDeploy:
  stage: autodeploy
  tags:
   - Spring_tag
  script:
    - cd Backend/petclinicdemos/Spring
    - mvn package
    - sudo mv target/*.jar /target/web-demo.jar
    - sudo systemctl stop system-web-demo
    - sudo systemctl start system-web-demo

#    - sudo systemctl stop systemd-web-demo
#    - sudo systemctl start systemd-web-demo






image: java:8-jdk


before_script:
#  - echo `pwd` # debug
#  - echo "$CI_BUILD_NAME, $CI_BUILD_REF_NAME $CI_BUILD_STAGE" # debug
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

androidbuild:
  stage: androidbuild
  tags:
   - android_tag
  script:
    - ./gradlew assemble
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 week
  only:
    - master

androidtest:
  stage: androidtest
  tags:
   - android_tag
  script:
    - ./gradlew check

androiddeploy:
  stage: androiddeploy
  tags:
   - android_tag
  script:
    - ./deploy

after_script:
  - echo "End CI"
